<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>YANG-meng-97</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://yang-meng-97.github.io/"/>
  <updated>2020-06-09T07:56:59.209Z</updated>
  <id>https://yang-meng-97.github.io/</id>
  
  <author>
    <name>YANG-meng-97</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Github+Hexo搭建个人博客(2)</title>
    <link href="https://yang-meng-97.github.io/2020/06/09/2020-06-09Github+Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2(2)/"/>
    <id>https://yang-meng-97.github.io/2020/06/09/2020-06-09Github+Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2(2)/</id>
    <published>2020-06-09T06:45:50.000Z</published>
    <updated>2020-06-09T07:56:59.209Z</updated>
    
    <content type="html"><![CDATA[<h2 id="更换主题"><a href="#更换主题" class="headerlink" title="更换主题"></a>更换主题</h2><p>选择自己喜欢的主题，此处就以“icalm”主题为例。</p><p><img src="/2020/06/09/2020-06-09Github+Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2(2)/favoritethemes.jpg" alt="favoritethemes"></p><p>点击进入，此时就进入到展示页面。点击Github进入网页著作者的Github（有些网页是点击About或Github图标进入）；进入仓库，搜索主题仓库。</p><p><img src="/2020/06/09/2020-06-09Github+Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2(2)/repository.jpg" alt="repository"></p><p>点击对应主题博文，复制下载地址。</p><p><img src="/2020/06/09/2020-06-09Github+Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2(2)/repositorytwo.jpg" alt="repositorytwo"></p><p>在站点名上长按Shift+右键，选择Git Bash here；或者win+R，输入cmd进入站点名的路径。输入以下命令，地址为刚才我们复制的下载地址，themes/hexo-theme-icalm是在本地文件夹中的名字</p><p><code>$ git clone https://github.com/nameoverflow/hexo-theme-icalm.git themes/hexo-theme-icalm</code></p><p>下载完成后就会在themes目录下生成一个hexo-theme-icalm文件。</p><p>更改站点下的_config.yml文件，找到theme，更改为：</p><p><code>theme: hexo-theme-icalm</code></p><p>注意不要更改其本身的结构，把其余不用的主题用<code>#</code>注释。</p><p>最后继续在站点路径下，输入以下代码：</p><p>#清空缓存</p><p><code>$ hexo clean</code></p><p>#重新生成database</p><p><code>$ hexo g</code></p><p>#打开本地仓库服务，在默认端口下<a href="http://localhost:4000/可以看到更换主题后的页面" target="_blank" rel="noopener">http://localhost:4000/可以看到更换主题后的页面</a></p><p><code>$ hexo s</code></p><p>#上传到远程仓库</p><p><code>$ hexo d</code></p><p>注意：上传到远程仓库后，更新需要一定时间，所以不着急</p><h2 id="添加文章"><a href="#添加文章" class="headerlink" title="添加文章"></a>添加文章</h2><p><strong>1.创建文章</strong></p><p>在source/_post文件夹中，有默认的文章Hello World.md。</p><p>如果需要添加图片，先打开站点配置文件_config.yml，找到<code>post_asset_folder</code>选项，将其设置为true。在站点文件夹中打开Git Bash，输入以下命令： <code>$ npm install hexo-asset-image --save</code>安装插件。</p><p>在Git Bash，输入以下命令：<code>$ hexo new &quot;title&quot;</code>，就会在source/_post文件夹中生成一个.md类型的文本和一个同名文件夹。在编辑文章时，所需要的图片就放置在文件夹中，用相对路径添加图片。</p><p><strong>2.编写文章</strong></p><p>在此比较推荐<a href="https://www.typora.io/" target="_blank" rel="noopener">typora</a>编写md文件。不需要太多基础知识，就可以轻松实现；也可以点击typora页面的“帮助”-&gt;“Quick Start”，快速开始编写。</p><p>编写完文章后，输入以下代码：</p><p>#重新生成database</p><p><code>$ hexo g</code></p><p>#打开本地仓库服务，在默认端口下<a href="http://localhost:4000/可以看到新增文章" target="_blank" rel="noopener">http://localhost:4000/可以看到新增文章</a></p><p><code>$ hexo s</code></p><p>#上传到远程仓库</p><p><code>$ hexo d</code></p><p>注意：上传到远程仓库后，更新需要一定时间，所以不着急</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;更换主题&quot;&gt;&lt;a href=&quot;#更换主题&quot; class=&quot;headerlink&quot; title=&quot;更换主题&quot;&gt;&lt;/a&gt;更换主题&lt;/h2&gt;&lt;p&gt;选择自己喜欢的主题，此处就以“icalm”主题为例。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2020/06/09/2020-0
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>在vsCode上安装Fecs</title>
    <link href="https://yang-meng-97.github.io/2020/06/09/2020-06-09%E5%9C%A8vsCode%E4%B8%8A%E5%AE%89%E8%A3%85Fecs/"/>
    <id>https://yang-meng-97.github.io/2020/06/09/2020-06-09%E5%9C%A8vsCode%E4%B8%8A%E5%AE%89%E8%A3%85Fecs/</id>
    <published>2020-06-09T02:16:53.000Z</published>
    <updated>2020-06-09T04:34:48.785Z</updated>
    
    <content type="html"><![CDATA[<h2 id="下载Node-js"><a href="#下载Node-js" class="headerlink" title="下载Node.js"></a>下载Node.js</h2><p><strong>1.下载Node.js</strong></p><p><a href="https://nodejs.org/zh-cn/download/" target="_blank" rel="noopener">Node.je官方下载地址</a></p><p>按照安装步骤一直按next，看可以更改安装路径，例如C:\node.js</p><p><strong>2.检测安装是否成功</strong></p><ul><li>按win+R键，输入cmd，回车</li></ul><p><img src="/2020/06/09/2020-06-09%E5%9C%A8vsCode%E4%B8%8A%E5%AE%89%E8%A3%85Fecs/cmd.jpg" alt="cmd"></p><ul><li>不管默认路径，输入<code>node -v</code>和<code>npm -v</code>，回车，会显示node,js和npm的版本，则安装成功</li></ul><p><img src="/2020/06/09/2020-06-09%E5%9C%A8vsCode%E4%B8%8A%E5%AE%89%E8%A3%85Fecs/version.jpg" alt="version"></p><p>新版的Node.js已自带npm，安装Node.js时会一起安装，npm的作用就是对Node.js依赖的包进行管理，也可以理解为用来安装/卸载Node.js需要装的东西。</p><p><strong>3.配置环境变量</strong></p><ul><li><p>在刚才Node.js的安装路径下C:\node.js，创建两个文件夹node_global和node_cache</p><p><img src="/2020/06/09/2020-06-09%E5%9C%A8vsCode%E4%B8%8A%E5%AE%89%E8%A3%85Fecs/check.jpg" alt="check"></p></li><li><p>在当前目录，长按Shift+鼠标右键，打开cmd命令行</p><p><img src="/2020/06/09/2020-06-09%E5%9C%A8vsCode%E4%B8%8A%E5%AE%89%E8%A3%85Fecs/opencmd.jpg" alt="opencmd"></p><p><img src="/2020/06/09/2020-06-09%E5%9C%A8vsCode%E4%B8%8A%E5%AE%89%E8%A3%85Fecs/open.jpg" alt="open"></p></li><li><p>输入以下命令，回车</p><p><code>npm config set prefix &quot;D:\nodejs\node_global&quot;</code><br><code>npm config set cache &quot;D:\nodejs\node_cache&quot;</code></p></li><li><p>点击“我的电脑”-&gt;右键-&gt;“属性”-&gt;“高级系统设置”-&gt;“高级”-&gt;“环境变量”</p><p>系统变量</p><p><img src="/2020/06/09/2020-06-09%E5%9C%A8vsCode%E4%B8%8A%E5%AE%89%E8%A3%85Fecs/opensystem.jpg" alt="opensystem"></p><p>添加以下代码</p><p><code>C:\node.js\</code></p><p><img src="/2020/06/09/2020-06-09%E5%9C%A8vsCode%E4%B8%8A%E5%AE%89%E8%A3%85Fecs/addsystem.jpg" alt="addsystem"></p><p>用户变量</p><p><img src="/2020/06/09/2020-06-09%E5%9C%A8vsCode%E4%B8%8A%E5%AE%89%E8%A3%85Fecs/openuser.jpg" alt="openuser"></p><p>添加以下代码</p><p><code>C:\node.js\node_global</code></p><p><img src="/2020/06/09/2020-06-09%E5%9C%A8vsCode%E4%B8%8A%E5%AE%89%E8%A3%85Fecs/adduser.jpg" alt="adduser"></p></li></ul><p>  则配置成功。</p><h2 id="下载vsCode"><a href="#下载vsCode" class="headerlink" title="下载vsCode"></a>下载vsCode</h2><p><a href="https://code.visualstudio.com/Download" target="_blank" rel="noopener">vsCode官方下载地址</a></p><p>按照安装步骤一直按next，看可以更改安装路径，例如C:\vscode</p><h2 id="安装使用Fecs"><a href="#安装使用Fecs" class="headerlink" title="安装使用Fecs"></a>安装使用Fecs</h2><p><strong>1.打开vsCode终端</strong></p><p>快捷键Ctrl+`    例如：这个点为Esc下面的那个键</p><p><strong>2.安装Fecs</strong></p><p>不用担心当前目录在哪儿，全局安装即可，直接输入：<code>npm install fecs -g</code></p><p><img src="/2020/06/09/2020-06-09%E5%9C%A8vsCode%E4%B8%8A%E5%AE%89%E8%A3%85Fecs/installfecs.jpg" alt="installfecs"></p><p>等待安装，安装好了。</p><p><strong>3.使用Fecs</strong></p><p>新建一个文件夹，来装载以后我们需要检测Fecs的代码，例如：Fecs-text；我们先写一个用来测试的index.html文件</p><p><img src="/2020/06/09/2020-06-09%E5%9C%A8vsCode%E4%B8%8A%E5%AE%89%E8%A3%85Fecs/indexhtml.jpg" alt="indexhtml"></p><p>可以发现这个文件的格式不太美观 ，空格太多。这是我们就需要Fecs来规范格式。</p><ul><li><p>打开终端，将终端的地址改为当前编写网页所在文件夹的位置</p><p>返回上一级地址使用<code>cd..</code></p><p>前进下一级地址使用<code>cd 文件夹名</code></p></li></ul><p>  <img src="/2020/06/09/2020-06-09%E5%9C%A8vsCode%E4%B8%8A%E5%AE%89%E8%A3%85Fecs/changeroute.jpg" alt="changeroute"></p><p>  一定要保存需要进行Fecs规范的网页</p><ul><li><p>输入以下命令：<code>fecs check</code></p><p>然后就会告诉我们哪里有问题。</p><p><img src="/2020/06/09/2020-06-09%E5%9C%A8vsCode%E4%B8%8A%E5%AE%89%E8%A3%85Fecs/fecscheck.jpg" alt="fecscheck"></p></li><li><p>输入一下命令：<code>fecs format</code></p><p><img src="/2020/06/09/2020-06-09%E5%9C%A8vsCode%E4%B8%8A%E5%AE%89%E8%A3%85Fecs/fecsformat.jpg" alt="fecsformat"></p><p>就会自动在fecs-test下生成一个output文件夹，里面就会有一个正确规范index.html文件。</p></li></ul><p>  <strong>自此结束</strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;下载Node-js&quot;&gt;&lt;a href=&quot;#下载Node-js&quot; class=&quot;headerlink&quot; title=&quot;下载Node.js&quot;&gt;&lt;/a&gt;下载Node.js&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;1.下载Node.js&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a hre
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Github+Hexo搭建个人博客(1)</title>
    <link href="https://yang-meng-97.github.io/2020/06/06/2020-06-06Github+Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2(1)/"/>
    <id>https://yang-meng-97.github.io/2020/06/06/2020-06-06Github+Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2(1)/</id>
    <published>2020-06-06T10:00:01.000Z</published>
    <updated>2020-06-09T07:38:49.429Z</updated>
    
    <content type="html"><![CDATA[<p>新建一个文件夹，自行命名，用来装载我们自己的博客，例如：C:\blog</p><h2 id="Github板块"><a href="#Github板块" class="headerlink" title="Github板块"></a>Github板块</h2><p><strong>1.新建一个Github账号</strong></p><p><a href="https://github.com/login" target="_blank" rel="noopener">Github官方网站注册页面</a></p><img src="/2020/06/06/2020-06-06Github+Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2(1)/githubcreate.jpg"><p><strong>2.创建一个新仓库</strong></p><img src="/2020/06/06/2020-06-06Github+Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2(1)/githubnewrespository.jpg"><img src="/2020/06/06/2020-06-06Github+Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2(1)/githubrespositoryname.jpg"><h2 id="Node-js板块"><a href="#Node-js板块" class="headerlink" title="Node.js板块"></a>Node.js板块</h2><p><a href="http://nodejs.cn/download/" target="_blank" rel="noopener">Node.js下载地址</a></p><h2 id="git板块"><a href="#git板块" class="headerlink" title="git板块"></a>git板块</h2><p><strong>1.下载安装git</strong></p><p><a href="https://git-scm.com/downloads" target="_blank" rel="noopener">git下载地址</a>：一直next就可以，可以更改安装路径</p><p><strong>2.配置SSH-Key</strong></p><p>在我们自己新建的文件夹中，长按shift+鼠标右键，点击Git Bash Here打开Git Bash弹出窗口</p><img src="/2020/06/06/2020-06-06Github+Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2(1)/gitbashhere.jpg"><img src="/2020/06/06/2020-06-06Github+Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2(1)/gitbashherewindow.jpg"><p><strong>3.输入命令</strong></p><p>  <code>$ git config --global user.name &quot;Your Name&quot;</code><br>  <code>$ git config --global user.email &quot;email@example.com&quot;</code><br>  <code>$ ssh-keygen -t rsa -C email@example.com  // 生成ssh</code></p><p><em><code>Your Name</code>和<code>email@example.com</code>均为自己注册的git用户名和邮箱</em></p><p>注：每输入一条，按回车，后面全部直接回车，不填写东西</p><p>进入C:\Users\Administrator\.ssh会查看到里面有两个文件</p><p><img src="/2020/06/06/2020-06-06Github+Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2(1)/checkid.jpg" alt="checkid"></p><p><strong>4.登录Github，进入之前新建的仓库</strong></p><img src="/2020/06/06/2020-06-06Github+Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2(1)/shh.jpg"><p><strong>5.打开C:\Users\Administrator\.ssh的id_rsa_pub</strong></p><ul><li><p>复制文件中的内容粘贴到key中，title名为之前新建的文件夹</p></li><li><p>选中 allow write access</p></li><li><p>最后点击add key</p><img src="/2020/06/06/2020-06-06Github+Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2(1)/shh-key.jpg"></li></ul><p><strong>6.测试是否成功</strong></p><p>在Git Bash中输入命令：<code>$ ssh -T git@github.com</code></p><p>出现</p><p>Hi whitescholars/whitescholars.github.io! You’ve successfully authenticated, but GitHub does not provide shell access.</p><p>证明校验成功。</p><h2 id="Hexo板块"><a href="#Hexo板块" class="headerlink" title="Hexo板块"></a>Hexo板块</h2><p><strong>1.安装Hexo</strong></p><ul><li><p>win+R键，输入cmd，进入之前新建的C:\blog文件夹</p><p><img src="/2020/06/06/2020-06-06Github+Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2(1)/cmd.jpg" alt="cmd"></p><p><img src="/2020/06/06/2020-06-06Github+Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2(1)/changeroute.jpg" alt="changeroute"></p></li><li><p>输入以下命令：</p><p>#安装 hexo  -g全局安裝<br><code>$ npm install hexo-cli -g</code><br>#安装 hexo 部署到 git page 的 deployer<br><code>$ npm install hexo-deployer-git --save</code></p><p>#检测是否安装成功<br><code>$ hexo -v</code></p></li></ul><p><strong>2.Hexo初始化博客配置</strong></p><p>输入以下命令：</p><p>#初始化配置+博客名<br><code>$ hexo init 博客名</code></p><p>#进入博客名 文件夹<br><code>$ cd 博客名</code><br>#安装需要的相关依赖<br><code>$ npm install</code></p><p><strong>3.本地运行博客</strong></p><p>#cmd 进入博客根目录C:\blog\博客名</p><p>#默认 4000端口运行<br><code>$ hexo s</code></p><p>#自定义端口运行<br><code>$ hexo s -p 端口</code></p><p>此时就可以用浏览器访问：<a href="http://localhost:4000/，默认Hexo页面效果" target="_blank" rel="noopener">http://localhost:4000/，默认Hexo页面效果</a></p><p>在C:\blog\博客名\source_posts\hello-world.md中添加<code>## Hello Hexo</code> ，则可以实现修改内容，本地不用重新运行即可查看。</p><p><strong>4.配置文件</strong></p><p>修改配置：C:\blog\博客名_config.yml文件内容</p><p>找到以下内容，进行修改。注意：不要破坏原有结果，包括空格。</p><p>#博客作者<br><code>author: username</code></p><p>#url 博客地址<br><code>url: https://usename.github.io</code></p><p>#发布到哪个仓库的哪个分支<br><code>deploy:</code><br>  <code>type: git</code><br>  <code>repo: https://github.com/username/username.github.io.git</code><br>  <code>branch: master</code></p><p><em><code>username</code>为你在Github上的用户名</em></p><p><strong>5.发布到Github上</strong></p><p>win+R键，输入cmd，进入C:\blog\博客名</p><p>输入以下命令：</p><p>#先生成<br><code>$ hexo g</code><br>#再提交到github<br><code>$ hexo d</code></p><p>注意：需要关闭本地运行，Ctrl+C。</p><p>如果在<code>hexo d</code>提示ERROR Deployer not found: git，则先安装hexo-deployer-git，输入以下命令：</p><p><code>$ npm install hexo-deployer-git --save</code></p><p>再执行上述命令。</p><p>这样就可以通过<a href="https://username.github.io/进行博客访问了。" target="_blank" rel="noopener">https://username.github.io/进行博客访问了。</a></p><p><strong>自此个人博客的搭建结束，接下来就进行个性化设置。</strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;新建一个文件夹，自行命名，用来装载我们自己的博客，例如：C:\blog&lt;/p&gt;
&lt;h2 id=&quot;Github板块&quot;&gt;&lt;a href=&quot;#Github板块&quot; class=&quot;headerlink&quot; title=&quot;Github板块&quot;&gt;&lt;/a&gt;Github板块&lt;/h2&gt;&lt;p&gt;&lt;st
      
    
    </summary>
    
    
    
  </entry>
  
</feed>
