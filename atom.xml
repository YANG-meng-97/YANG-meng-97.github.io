<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://yang-meng-97.github.io/"/>
  <updated>2020-06-08T03:21:15.086Z</updated>
  <id>https://yang-meng-97.github.io/</id>
  
  <author>
    <name>YANG-meng-97</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>2020-06-08在vscode上安装Fecs</title>
    <link href="https://yang-meng-97.github.io/2020/06/08/2020-06-08%E5%9C%A8vscode%E4%B8%8A%E5%AE%89%E8%A3%85Fecs/"/>
    <id>https://yang-meng-97.github.io/2020/06/08/2020-06-08%E5%9C%A8vscode%E4%B8%8A%E5%AE%89%E8%A3%85Fecs/</id>
    <published>2020-06-08T01:05:37.000Z</published>
    <updated>2020-06-08T03:21:15.086Z</updated>
    
    <content type="html"><![CDATA[<h4 id="下载Node-js"><a href="#下载Node-js" class="headerlink" title="下载Node.js"></a>下载Node.js</h4><p><strong>1.下载Node.js</strong></p><p><a href="https://nodejs.org/zh-cn/download/" target="_blank" rel="noopener">Node.je官方下载地址</a></p><p>按照安装步骤一直按next，看可以更改安装路径，例如C:\node.js</p><p><strong>2.检测安装是否成功</strong></p><ul><li>按win+R键，输入cmd，回车</li></ul><p><img src="/2020/06/08/2020-06-08%E5%9C%A8vscode%E4%B8%8A%E5%AE%89%E8%A3%85Fecs/cmd.jpg" alt="cmd"></p><ul><li>不管默认路径，输入node -v和npm -v，回车，会显示node,js和npm的版本，则安装成功</li></ul><p><img src="/2020/06/08/2020-06-08%E5%9C%A8vscode%E4%B8%8A%E5%AE%89%E8%A3%85Fecs/version.jpg" alt="version"></p><p>新版的Node.js已自带npm，安装Node.js时会一起安装，npm的作用就是对Node.js依赖的包进行管理，也可以理解为用来安装/卸载Node.js需要装的东西。</p><p><strong>3.配置环境变量</strong></p><ul><li><p>在刚才Node.js的安装路径下C:\node.js，创建两个文件夹node_global和node_cache</p><p><img src="/2020/06/08/2020-06-08%E5%9C%A8vscode%E4%B8%8A%E5%AE%89%E8%A3%85Fecs/check.jpg" alt="check"></p></li><li><p>在当前目录，长按Shift+鼠标右键，打开cmd命令行</p><p><img src="/2020/06/08/2020-06-08%E5%9C%A8vscode%E4%B8%8A%E5%AE%89%E8%A3%85Fecs/opencmd.jpg" alt="opencmd"></p><p><img src="/2020/06/08/2020-06-08%E5%9C%A8vscode%E4%B8%8A%E5%AE%89%E8%A3%85Fecs/open.jpg" alt="open"></p></li><li><p>输入以下命令，回车</p><p>npm config set prefix “D:\nodejs\node_global”<br>npm config set cache “D:\nodejs\node_cache”</p></li><li><p>点击“我的电脑”-&gt;右键-&gt;“属性”-&gt;“高级系统设置”-&gt;“高级”-&gt;“环境变量”</p><p>系统变量</p><p><img src="/2020/06/08/2020-06-08%E5%9C%A8vscode%E4%B8%8A%E5%AE%89%E8%A3%85Fecs/opensystem.jpg" alt="opensystem"></p><p>添加以下代码</p><p><img src="/2020/06/08/2020-06-08%E5%9C%A8vscode%E4%B8%8A%E5%AE%89%E8%A3%85Fecs/addsystem.jpg" alt="addsystem"></p><p>用户变量</p><p><img src="/2020/06/08/2020-06-08%E5%9C%A8vscode%E4%B8%8A%E5%AE%89%E8%A3%85Fecs/openuser.jpg" alt="openuser"></p><p>添加以下代码</p><p><img src="/2020/06/08/2020-06-08%E5%9C%A8vscode%E4%B8%8A%E5%AE%89%E8%A3%85Fecs/adduser.jpg" alt="adduser"></p></li></ul><p>  则配置成功。</p><h4 id="下载vsCode"><a href="#下载vsCode" class="headerlink" title="下载vsCode"></a>下载vsCode</h4><p><a href="https://code.visualstudio.com/Download" target="_blank" rel="noopener">vsCode官方下载地址</a></p><p>按照安装步骤一直按next，看可以更改安装路径，例如C:\vscode</p><h4 id="安装使用Fecs"><a href="#安装使用Fecs" class="headerlink" title="安装使用Fecs"></a>安装使用Fecs</h4><p><strong>1.打开vsCode终端</strong></p><p>快捷键Ctrl+`    例如：这个点为Esc下面的那个键</p><p><strong>2.安装Fecs</strong></p><p>不用担心当前目录在哪儿，全局安装即可，直接输入：npm install fecs -g</p><p><img src="/2020/06/08/2020-06-08%E5%9C%A8vscode%E4%B8%8A%E5%AE%89%E8%A3%85Fecs/installfecs.jpg" alt="installfecs"></p><p>等待安装，安装好了。</p><p><strong>3.使用Fecs</strong></p><p>新建一个文件夹，来装载以后我们需要检测Fecs的代码，例如：Fecs-text；我们先写一个用来测试的index.html文件</p><p><img src="/2020/06/08/2020-06-08%E5%9C%A8vscode%E4%B8%8A%E5%AE%89%E8%A3%85Fecs/indexhtml.jpg" alt="indexhtml"></p><p>可以发现这个文件的格式不太美观 ，空格太多。这是我们就需要Fecs来规范格式。</p><ul><li><p>打开终端，将终端的地址改为当前编写网页所在文件夹的位置</p><p>返回上一级地址使用cd..</p><p>前进下一级地址使用cd 文件夹名</p></li></ul><p>  <img src="/2020/06/08/2020-06-08%E5%9C%A8vscode%E4%B8%8A%E5%AE%89%E8%A3%85Fecs/changeroute.jpg" alt="changeroute"></p><p>  一定要保存需要进行Fecs规范的网页</p><ul><li><p>输入以下命令：fecs check</p><p>然后就会告诉我们哪里有问题。</p><p><img src="/2020/06/08/2020-06-08%E5%9C%A8vscode%E4%B8%8A%E5%AE%89%E8%A3%85Fecs/fecscheck.jpg" alt="fecscheck"></p></li><li><p>输入一下命令：fecs format</p><p><img src="/2020/06/08/2020-06-08%E5%9C%A8vscode%E4%B8%8A%E5%AE%89%E8%A3%85Fecs/fecsforamt.jpg" alt="fecsformat"></p><p>就会自动在fecs-test下生成一个output文件夹，里面就会有一个正确规范index.html文件。</p></li></ul><p>  <strong>自此结束</strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;下载Node-js&quot;&gt;&lt;a href=&quot;#下载Node-js&quot; class=&quot;headerlink&quot; title=&quot;下载Node.js&quot;&gt;&lt;/a&gt;下载Node.js&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;1.下载Node.js&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a hre
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>2020-06-06Github+Hexo搭建个人博客(1)</title>
    <link href="https://yang-meng-97.github.io/2020/06/06/2020-06-06Github-Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2(1)/"/>
    <id>https://yang-meng-97.github.io/2020/06/06/2020-06-06Github-Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2(1)/</id>
    <published>2020-06-06T10:00:01.000Z</published>
    <updated>2020-06-08T03:24:27.919Z</updated>
    
    <content type="html"><![CDATA[<p>新建一个文件夹，自行命名，用来装载我们自己的博客，例如：C:\blog</p><h2 id="Github板块"><a href="#Github板块" class="headerlink" title="Github板块"></a>Github板块</h2><p><strong>1.新建一个Github账号</strong></p><p><a href="https://github.com/login" target="_blank" rel="noopener">Github官方网站注册页面</a></p><img src="/2020/06/06/2020-06-06Github-Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2(1)/githubcreate.jpg"><p><strong>2.创建一个新仓库</strong></p><img src="/2020/06/06/2020-06-06Github-Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2(1)/githubnewrespository.jpg"><img src="/2020/06/06/2020-06-06Github-Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2(1)/githubrespositoryname.jpg"><h2 id="Node-js板块"><a href="#Node-js板块" class="headerlink" title="Node.js板块"></a>Node.js板块</h2><p><a href="http://nodejs.cn/download/" target="_blank" rel="noopener">Node.js下载地址</a></p><h2 id="git板块"><a href="#git板块" class="headerlink" title="git板块"></a>git板块</h2><p><strong>1.下载安装git</strong></p><p><a href="https://git-scm.com/downloads" target="_blank" rel="noopener">git下载地址</a>：一直next就可以，可以更改安装路径</p><p><strong>2.配置SSH-Key</strong></p><p>在我们自己新建的文件夹中，长按shift+鼠标右键，点击Git Bash Here打开Git Bash弹出窗口</p><img src="/2020/06/06/2020-06-06Github-Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2(1)/gitbashhere.jpg"><img src="/2020/06/06/2020-06-06Github-Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2(1)/gitbashherewindow.jpg"><p><strong>3.输入命令</strong></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ git config --<span class="keyword">global</span> user.name <span class="string">"Your Name"</span></span><br><span class="line">$ git config --<span class="keyword">global</span> user.email <span class="string">"email@example.com"</span></span><br><span class="line">$ ssh-keygen -t rsa -C email@example.com  <span class="comment">// 生成ssh</span></span><br></pre></td></tr></table></figure><p>Your Name和<a href="mailto:email@example.com">email@example.com</a>均为自己注册的git用户名和邮箱</p><p>注：每输入一条，按回车，后面全部直接回车，不填写东西</p><p>进入C:\Users\Administrator\.ssh会查看到里面有两个文件</p><p><img src="/2020/06/06/2020-06-06Github-Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2(1)/checkid.jpg" alt="checkid"></p><p><strong>4.登录Github，进入之前新建的仓库</strong></p><img src="/2020/06/06/2020-06-06Github-Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2(1)/shh.jpg"><p><strong>5.打开C:\Users\Administrator\.ssh的id_rsa_pub</strong></p><ul><li><p>复制文件中的内容粘贴到key中，title名为之前新建的文件夹</p></li><li><p>选中 allow write access</p></li><li><p>最后点击add key</p><img src="/2020/06/06/2020-06-06Github-Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2(1)/shh-key.jpg"></li></ul><p><strong>6.测试是否成功</strong></p><p>在Git Bash中输入命令：$ ssh -T <a href="mailto:git@github.com">git@github.com</a></p><p>出现</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Hi whitescholars/whitescholars.github.io! You<span class="symbol">'ve</span> successfully authenticated, but GitHub does not provide shell access.</span><br></pre></td></tr></table></figure><p>证明校验成功。</p><h2 id="or-paste-to-another-app-instead-of-copy-paste-from-to-another-markdown-editor-Therefore-by-default-Copy-means-Copy-As-HTML-and-Paste-means-Paste-from-HTML"><a href="#or-paste-to-another-app-instead-of-copy-paste-from-to-another-markdown-editor-Therefore-by-default-Copy-means-Copy-As-HTML-and-Paste-means-Paste-from-HTML" class="headerlink" title="or paste to another app, instead of copy/paste from/to another markdown editor. Therefore, by default, Copy means Copy As HTML ( and Paste means Paste from HTML)."></a>or paste to another app, instead of copy/paste from/to another markdown editor. Therefore, by default, Copy means Copy As HTML ( and Paste means Paste from HTML).</h2><p>We create typora and want to make it your default markdown editor, thus copy and paste means copy from another app or paste to another app, instead of <em>copy/paste from/to another markdown editor</em>. Therefore, by default, <code>Copy</code> means <code>Copy As HTML</code> ( and <code>Paste</code> means <code>Paste from HTML</code>). </p><p>However, after click “<strong>Copy Markdown source by default</strong>“, typora will copy selected text in HTML/markdown format (When pasting, rich editors will accept the HTML format, while plain text / code editor will accept the markdown source code format).</p><p>To <strong>copy Markdown source code</strong> explicitly, please use shortcut key <code>shift+cmd+c</code> or <code>Copy as Markdown</code> from menu. To <strong>Copy as HTML Code</strong>, please select <code>Copy as HTML Code</code> from menu.</p><h2 id="Smart-Paste"><a href="#Smart-Paste" class="headerlink" title="Smart Paste"></a>Smart Paste</h2><p><strong>Typora</strong> is able to analyze styles of the text content in your clipboard when pasting. For example, after pasting a <code>&lt;h1&gt;HEADING&lt;/h1&gt;</code> from some website, typora will keep the ‘first level heading’ format instead of paste ‘heading’ as plain text. </p><p>To <strong>paste as markdown source</strong> or plain text, you should use <code>paste as plain text</code> or press the shortcut key: <code>shift+cmd+v</code>.</p><h2 id="Themes"><a href="#Themes" class="headerlink" title="Themes"></a>Themes</h2><p>Please refer to <code>Help</code> → <code>Custom Themes</code> from menu bar.</p><h2 id="Publish"><a href="#Publish" class="headerlink" title="Publish"></a>Publish</h2><p>Currently Typora only support to export as <strong>PDF</strong> or <strong>HTML</strong>. More data format support as import/export will be integrated in future.</p><h2 id="Auto-Save-and-File-Recovery"><a href="#Auto-Save-and-File-Recovery" class="headerlink" title="Auto Save and File Recovery"></a>Auto Save and File Recovery</h2><p>Typora support  auto save feature, user could enable it from preference panel. </p><p>Typora does not provide professional version control and file backup feature, but typora would backup the last file content from time to time automatically, so even when typora crashes or users forget to save the file before close, it is possible to recovery most of the work by clicking <code>Recovery Unsaved Drafts</code> from preference folder, and copy out backed-up files. The File name in this folder is consists of last saved date, originally file name and last saved timestamp.</p><h2 id="More-Useful-Tips-amp-Documents"><a href="#More-Useful-Tips-amp-Documents" class="headerlink" title="More Useful Tips &amp; Documents"></a>More Useful Tips &amp; Documents</h2><p><a href="https://support.typora.io/" target="_blank" rel="noopener">https://support.typora.io/</a></p><h2 id="And-More"><a href="#And-More" class="headerlink" title="And More ?"></a>And More ?</h2><p>For more questions or feedbacks, please contact us by:</p><ul><li>Home Page: <a href="http://typora.io" target="_blank" rel="noopener">http://typora.io</a></li><li>Email: <a href="mailto:&#x68;&#105;&#x40;&#x74;&#121;&#112;&#111;&#114;&#97;&#46;&#x69;&#x6f;">&#x68;&#105;&#x40;&#x74;&#121;&#112;&#111;&#114;&#97;&#46;&#x69;&#x6f;</a></li><li>Twitter <a href="https://twitter.com/typora" target="_blank" rel="noopener">@typora</a></li></ul><p>We opened a Github issue page in case you want to start a discussion or as an alternative way to report bugs/suggestions: <a href="https://github.com/typora/typora-issues/issues" target="_blank" rel="noopener">https://github.com/typora/typora-issues/issues</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;新建一个文件夹，自行命名，用来装载我们自己的博客，例如：C:\blog&lt;/p&gt;
&lt;h2 id=&quot;Github板块&quot;&gt;&lt;a href=&quot;#Github板块&quot; class=&quot;headerlink&quot; title=&quot;Github板块&quot;&gt;&lt;/a&gt;Github板块&lt;/h2&gt;&lt;p&gt;&lt;st
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://yang-meng-97.github.io/2020/06/05/hello-world/"/>
    <id>https://yang-meng-97.github.io/2020/06/05/hello-world/</id>
    <published>2020-06-05T09:18:34.446Z</published>
    <updated>2020-06-05T09:32:38.593Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p><h2 id="Hello-Hexo"><a href="#Hello-Hexo" class="headerlink" title="Hello Hexo"></a>Hello Hexo</h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
    
  </entry>
  
</feed>
